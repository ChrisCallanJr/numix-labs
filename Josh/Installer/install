#!/bin/bash

# Installation script for Numix icon themes, written and maintained by
# Joshua Fogg (joshua.h.fogg@gmail.com). Originall A merge of the original
# python version and a fork of the Faenza installer written by Tiheum
# (matthieu.james@gmail.com)

# Starting vars
version="1.3"
mode="install"

# Deals with the flags
if [ -z $1 ]
then
	: # pass
else
	case $1 in
		-u|--uninstall)
			echo "This will undo all changes previously made."
			while true; do
				read -p "Are you sure you want to continue? " answer
				case $answer in
					[Yy]* ) mode="uninstall"; break;;
					[Nn]* ) exit;;
					* ) echo "Please answer [Y/y]es or [N/n]o.";;
				esac
			done;;
		-h|--help)
			echo -e "Usage: ./$(basename -- $0) [OPTION]"
			echo -e "Installs the free Numix icon themes."
			echo -e ""
			echo -e "Currently supported options:"
			echo -e "  -u, --uninstall \t Reverts any changes made."
			echo -e "  -h, --help \t\t Displays this help menu."
			echo -e "  -v, --version \t Displays program version."
			exit 0 ;;
		-v|--version)
			echo "$(basename -- $0) $version\n"
			exit 0 ;;
		*)
			echo -e "$(basename -- $0): invalid option -- '$1'"
			echo -e "Try '$(basename -- $0) --help' for more information."
			exit 0 ;;
	esac
fi

# Verifies if 'wget' is installed
if type "wget"
then
	: # pass
else
	echo -e "$0: This script requires 'wget' to be installed\r
		to fetch the themes from the GitHub repository.\r
		Please install them and rerun this script."
	exit 1
fi

# Verifies if 'tar' is installed
if type "tar"
then
	: # pass
else
	echo -e "$0: This script requires 'tar' to be installed\r
		to deal with the source archives downloaded.\r
		Please install them and rerun this script."
	exit 1
fi


if [ "$mode" == "install" ]
then
	# Asks for root
	ROOT_UID=0
	if [ "$UID" -ne "$ROOT_UID" ]
	then
		echo "Icon themes will be installed in $HOME/.icons making them available to only you."
		echo "To make them available for all users, run this script as root."
	else
		echo "Icon themes will be installed in /usr/share/icons and are available for all users."
	fi
	read -p "Do you want to continue ? [Y]es, [N]o : " response
	case $response in
		[Yy]* ) ;;
	    [Nn]* ) exit 99;;
	    * ) echo "Wrong value: installaton aborted."; exit 1;;
	esac

	echo "Downloading Numix..."
	wget -q -O Numix.tar.gz https://github.com/numixproject/numix-icon-theme/archive/master.tar.gz
	tar xf Numix.tar.gz 2>/dev/null
	rm -Rf  Numix.tar.gz 2>/dev/null
	cd numix-icon-theme-master
	mv Numix ../Numix
	cd ../
	rm -Rf numix-icon-theme-master

	echo "Downloading Numix Circle..."
	wget -q -O Numix-Circle.tar.gz https://github.com/numixproject/numix-icon-theme-circle/archive/master.tar.gz
	tar xf Numix-Circle.tar.gz 2>/dev/null
	rm -Rf  Numix-Circle.tar.gz 2>/dev/null
	cd numix-icon-theme-circle-master
	mv Numix-Circle ../Numix-Circle
	cd ../
	rm -Rf numix-icon-theme-circle-master

	echo "Downloading Numix Shine..."
	wget -q -O Numix-Shine.tar.gz https://github.com/numixproject/numix-icon-theme-shine/archive/master.tar.gz
	tar xf Numix-Shine.tar.gz 2>/dev/null
	rm -Rf  Numix-Shine.tar.gz 2>/dev/null
	cd numix-icon-theme-shine-master
	mv Numix-Shine ../Numix-Shine
	cd ../
	rm -Rf numix-icon-theme-shine-master

	echo "Downloading Numix uTouch..."
	wget -q -O Numix-uTouch.tar.gz https://github.com/numixproject/numix-icon-theme-utouch/archive/master.tar.gz
	tar xf Numix-uTouch.tar.gz 2>/dev/null
	rm -Rf  Numix-uTouch.tar.gz 2>/dev/null
	cd numix-icon-theme-utouch-master
	mv Numix-uTouch ../Numix-uTouch
	cd ../
	rm -Rf numix-icon-theme-utouch-master

	# Moves directory
	DIR="$( cd -P "$( dirname "$0" )" && pwd )"
	cd $DIR

	# Checks for existing installation and deals with it
	if [ -d $HOME/.icons/Numic ]
	then
		echo
		read -p "An existing installation have been detected in $HOME/.icons. Remove it previously ? [Y]es, [N]o :" response
		case $response in
			[Yy]* ) rm -Rf $HOME/.icons/Numix 2>/dev/null; rm -Rf $HOME/.icons/Numix-Circle 2>/dev/null; rm -Rf $HOME/.icons/Numix-Shine 2>/dev/null; rm -Rf $HOME/.icons/Numix-uTouch 2>/dev/null;;
		    * ) ;;
		esac
	fi

	# Checks for existing installation and deals with it
	if [ "$UID" -eq "$ROOT_UID" ]
	then
		if [ -d /usr/share/icons/Numix ]
		then
			echo
			read -p "An existing installation has been detected in /usr/share/icons. Remove it previously ? [Y]es, [N]o :" response
			case $response in
				[Yy]* ) rm -Rf /usr/share/icons/Numix 2>/dev/null; rm -Rf /usr/share/icons/Numix-Circle 2>/dev/null; rm -Rf /usr/share/icons/Numix-Shine 2>/dev/null; rm -Rf /usr/share/icons/Numix-uTouch 2>/dev/null;;
			    * ) ;;
			esac
			echo
		fi
		cp -R ./Numix/ /usr/share/icons/
		cp -R ./Numix-Circle/ /usr/share/icons/
		cp -R ./Numix-Shine/ /usr/share/icons/
		cp -R ./Numix-uTouch/ /usr/share/icons/
		install_dir=/usr/share/icons/
	else
		cp -R ./Numix/ $HOME/.icons/
		cp -R ./Numix-Circle/ $HOME/.icons/
		cp -R ./Numix-Shine/ $HOME/.icons/
		cp -R ./Numix-uTouch/ $HOME/.icons/
		install_dir=$HOME/.icons/
	fi

	echo
	echo "Installation complete."

	# Clean Up
	rm -Rf Numix
	rm -Rf Numix-Circle
	rm -Rf Numix-Shine
	rm -Rf Numix-uTouch

	# End
	exit 0
elif [ "$mode" == "uninstall" ]
then
	# Checks for root
	ROOT_UID=0
	if [ "$UID" -ne "$ROOT_UID" ]
	then
		echo "Numix icon themes installed in $HOME/.icons will be removed."
	else
		echo "Numix icon themes installed in /usr/share/icons will be removed."
	fi
	read -p "Do you want to continue ? [Y]es, [N]o : " response
	case $response in
		[Yy]* ) ;;
		[Nn]* ) exit 99;;
		* ) echo "Wrong value: uninstall aborted."; exit 1;;
	esac

	# Uninstalls
	if [ "$UID" -eq "$ROOT_UID" ]
	then
		rm -Rf /usr/share/icons/Numix 2>/dev/null
		rm -Rf /usr/share/icons/Numix-Circle 2>/dev/null
		rm -Rf /usr/share/icons/Numix-Shine 2>/dev/null
		rm -Rf /usr/share/icons/Numix-uTouch 2>/dev/null
	else
		rm -Rf $HOME/.icons/Numix 2>/dev/null
		rm -Rf $HOME/.icons/Numix-Circle 2>/dev/null
		rm -Rf $HOME/.icons/Numix-Shine 2>/dev/null
		rm -Rf $HOME/.icons/Numix-uTouch 2>/dev/null
	fi

	echo "Uninstall complete."

	# End
	exit 0
fi
